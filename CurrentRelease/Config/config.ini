# In a default install, don't forget to run the `copyConfig` command after tweaking the
# config.ini in the Release/Config directory

#
# DO NOT blindly COPY the modified active config.ini back on top of the
# template CurrentRelease/Config/config.ini file.
#
# If you do that, the template config.ini will become invalid.
#
# The active config.ini has additional lines added to it by the `copyConfig` command
#

[hosts]

#
# Various alternate host names for various IP addresses
# Allows us to define alternate definitions for 127.0.0.1 that the main coordinator
# should recognize as 'itself' and not hand over to the gateway
#

# localhost = 127.0.0.1

[urlMap]

#
# List of shorthand node URLs names - e.g. 'InDesign' could be replaced by something like
#
# tgh://freddy-dev-win2022.rorohiko.com/net.tightener.coordinator.indesign.18.0.server.configuration_noport/main
#
# This makes it easy to talk to a mixed bunch of local and remote nodes
#
# The default engine for some is determined by the defaultEngine=... setting in the coordinator section
# (e.g. Bridge has defaultEngine=ESDLL)
#

Bridge = tgh:///Bridge
console = tgh:///console/default
consoletested = tgh:///consoletested/default
ESTK = tgh:///ESTK
ExtendScriptToolkit = tgh:///ExtendScriptToolkit
# Illustrator and AdobeIllustrator are currently synonyms, via ESDLL
Illustrator = tgh:///Illustrator
AdobeIllustrator = tgh:///AdobeIllustrator
# InDesign: via C++ plugin; AdobeInDesign: via ESDLL
InDesign = tgh:///InDesign
AdobeInDesign = tgh:///AdobeInDesign
main = tgh:///main/default
# Photoshop and AdobePhotoshop are currently synonyms, via ESDLL
Photoshop = tgh:///Photoshop
AdobePhotoshop = tgh:///AdobePhotoshop
reflector = tgh:///reflector/default
scriptrunner = tgh:///scriptrunner/default
plugininstaller = tgh:///plugininstaller/default
# 'this' refers to the currently running node - e.g. eval("1+2","this")
this = tgh:////default

[coordinatorMap]

#
# List of shorthand coordinator names - e.g. 'InDesign' will be replaced by something like
#
# net.tightener.coordinator.indesign.16.2.server.configuration_noport
#
# Full coordinator IDs are case-sensitive, normally all-lowercase
#
# This all depending on the various placeholder configurations further down
# (e.g. INDESIGN_SDK_VERSION, INDESIGN_SERVER_CONFIGURATION,
# INDESIGN_SERVER_PORT, INDESIGN_COORDINATOR_SUFFIX)
#

# Bridge: ESDLL coordinator suffix is lower-cased despaced ExtendScript `app.name`. See ESDLLDaemon.jsx
Bridge = net.tightener.coordinator.bridge

console = net.tightener.coordinator.console

consoletested = net.tightener.coordinator.consoletested

# ESTK: ESDLL coordinator suffix is lower-cased despaced ExtendScript `app.name`. See ESDLLDaemon.jsx
ESTK = net.tightener.coordinator.extendscripttoolkit
ExtendScriptToolkit = net.tightener.coordinator.extendscripttoolkit

# Illustrator: ESDLL coordinator suffix is lower-cased despaced ExtendScript `app.name`. See ESDLLDaemon.jsx
Illustrator = net.tightener.coordinator.adobeillustrator
AdobeIllustrator = net.tightener.coordinator.adobeillustrator

# InDesign: plug-in coordinator suffix is lower-case 'indesign...'
# e.g. '...indesign.18.0' or '...indesign.18.0.server.configuration_noport'
InDesign = net.tightener.coordinator.indesign.${INDESIGN_SDK_VERSION}${INDESIGN_COORDINATOR_SUFFIX}

# Alternative: ESDL-based InDesign integration
# InDesign = net.tightener.coordinator.adobeindesign
AdobeInDesign = net.tightener.coordinator.adobeindesign

main = net.tightener.coordinator.main

# Photoshop: ESDLL coordinator suffix is lower-cased despaced ExtendScript `app.name`. See ESDLLDaemon.jsx
Photoshop = net.tightener.coordinator.adobephotoshop
AdobePhotoshop = net.tightener.coordinator.adobephotoshop

reflector = net.tightener.coordinator.reflector

scriptrunner = net.tightener.coordinator.scriptrunner

plugininstaller = net.tightener.coordinator.plugininstaller

[placeholders]

# MAIN_APP is the designated main coordinator on this workstation or server.
#
# Set MAIN_APP to one of:
#
#   LOCAL_TIGHTENER_RELEASE (C++ version of Tightener)
#   NETWORK_TIGHTENER_RELEASE (C++ version of Tightener with gateway functionality)
#   XOJO_UI_TIGHTENER_RELEASE (Xojo UI running from the Apps release folder, has gateway functionality)
#   XOJO_CMDLINE_TIGHTENER_RELEASE (Xojo cmdline running from the Apps release folder,
#       has gateway functionality)
#   APP_PATH (The currently running app. Whatever you start as main is the main app.
#       Useful for debugging/testing with the local C++ version of Tightener)

MAIN_APP = "${LOCAL_TIGHTENER_RELEASE}"

#
# The entries below all together define what the shorthand coordinator 'InDesign' will refer
# to on this computer
#

INDESIGN_VERSION = 2024

#
# INDESIGN_SDK_VERSION, NOT the InDesign version - it is the version of the SDK used to compile
# the plugin. We always have INDESIGN_SDK_VERSION <= INDESIGN_VERSION
#
# For example, for the InDesign 16.x family, InDesign Version 16.4 and above will run the plug-in compiled
# with SDK 16.3 - so for InDesign 16.3 and 16.4, you need to set INDESIGN_SDK_VERSION = 16.3
#

INDESIGN_SDK_VERSION = 19.0

# Use either INDESIGN_DESKTOP_SUFFIX or INDESIGN_SERVER_SUFFIX

INDESIGN_COORDINATOR_SUFFIX = "${INDESIGN_DESKTOP_SUFFIX}"

# The next two entries are only relevant when
# INDESIGN_COORDINATOR_SUFFIX is set to INDESIGN_SERVER_SUFFIX

INDESIGN_SERVER_CONFIGURATION = configuration
INDESIGN_SERVER_PORT = noport

# note: there are more placeholders further down below a second [placeholders] entry...

[sampleScripts]

# These are settings referenced by the sample scripts in Release/SampleScripts

INDESIGN_TARGET_ENGINE = main
LOCAL_TIMEOUT_MS = 2000
REMOTE_TIMEOUT_MS = 10000
TARGET_REMOTE_HOST = freddy-dev-win2022.rorohiko.com

[config]

# These are global settings. We can override these settings on a per-coordinator base
# in the coordinator-specific config sections further below
#
# PERFORMANCE OPTIMIZATION NOTICE:
# This config has been optimized for faster response times by reducing polling intervals.
# Total latency improvement: ~150ms → ~35ms (4x faster) for typical operations like 'rrt reflector hello.tql'
# If you experience stability issues, you can revert to conservative values by commenting out
# the optimized settings and uncommenting the original defaults.

# logLevel: 0 - 3
# For performance monitoring, you can temporarily set to 1 or 2
logLevel = 0

# logIPC: 0 or 1
# For debugging pipe communication performance, you can temporarily set to 1
logIPC = 0

# If the host app supports it, then the log output of the wrapping app is routed into
# Tightener's logging system when isLogSink is set to 1 (Xojo apps)

# isLogSink: 0 or 1
isLogSink = 0

# logTiming: 0 or 1
# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1

# Only useful for Mac; set consoleEcho to 0 when running from the Xcode debugger instead of a
# Terminal window.
# Alternatively, you can pass the command line parameter `-e 0` to the Tightener app
# (e.g. in a _Scheme_ in Xcode)

# consoleEcho = 1 # Use 0 when running from Xcode debugger

# Performance optimization: These settings reduce polling latency for faster response times
# Original defaults are shown in comments for reference

remoteTimeoutMicroseconds =  2000000               #   2 seconds
defaultTimeoutMicroseconds = 10000000              #  10 seconds
internalCoordinatorTimesliceMicroseconds = 10000   #  10 milliseconds

# PERFORMANCE OPTIMIZED: Event loop timing reduced from 20ms to 5ms (4x faster)
eventLoopMicroseconds = 5000                       #   5 milliseconds (was 20ms)

# PERFORMANCE OPTIMIZED: Sleep time reduced from 9ms to 2ms (4.5x faster)
eventLoopSleepMicroseconds = 2000                  #   2 milliseconds (was 9ms)

maxWaitMessageDropMicroseconds = 300000000         #   5 minutes

# PERFORMANCE OPTIMIZED: Pipe reappear timeout reduced from 1s to 250ms (4x faster)
maxWaitPipeReappearMicroseconds = 250000           # 250 milliseconds (was 1 second)

# PERFORMANCE OPTIMIZED: Sibling scanning reduced from 100ms to 25ms (4x faster)
scanActiveSiblingsIntervalMicroseconds = 25000     #  25 milliseconds (was 100ms)

scanConfigSiblingsIntervalMicroseconds = 5000000   #   5 seconds

# PERFORMANCE OPTIMIZED: Named pipe scanning reduced from 100ms to 25ms (4x faster)
scanNamedPipeSiblingsIntervalMicroseconds = 25000  #  25 milliseconds (was 100ms)

# PERFORMANCE OPTIMIZED: Stalled pipe sleep reduced from 1ms to 500μs (2x faster)
sleepStalledPipeMicroseconds = 500                 # 500 microseconds (was 1ms)

killStalledPipeMicroseconds = 5000000              #   5 seconds
sleepWaitForPipeMicroseconds = 1000000             #   1 second
testTimeoutMicroseconds = 10000000                 #  10 seconds

startupScriptFile = "${TIGHTENER_RELEASE_ROOT}ScriptModules/startupScript.tql

prompt = "$ "
promptContinuation = "> "

# ****************************************************************

[config.net.tightener.coordinator.main]

appPath = "${MAIN_APP}"
isServer = 1

localTQLPort=18888

# Log files for this coordinator

# logLevel = 3
logFile="${DESKTOP_DIR}main.log"

# logIPC = 1
ipcMessageLogFile="${DESKTOP_DIR}main.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile="${DESKTOP_DIR}main.timing.log"

# ****************************************************************

[config.net.tightener.coordinator.console]

appPath = "${CONSOLE_APP}"

# readStdin is similar to isInteractive, but only interacts with stdin, not with
# the keyboard
isInteractive = 1
readStdIn = 0

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}console.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}console.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}console.timing.log"

# ****************************************************************

# _REPL scripts (rrt_REPL, rre_REPL, rru_REPL) use consoles with a session ID appended to the name

[config.net.tightener.coordinator.console.*]

appPath = "${CONSOLE_APP}"

# readStdin is similar to isInteractive, but only interacts with stdin, not with
# the keyboard
isInteractive = 1
readStdIn = 0

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}console.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}console.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}console.timing.log"

# ****************************************************************

#
# Coordinator used by _Jupyter scripts like rrt_Jupyter, rre_Jupyter, rru_Jupyter
#

[config.net.tightener.coordinator.kernelconsole.*]

appPath = "${CONSOLE_APP}"

# readStdin is similar to isInteractive, but only interacts with stdin, not with
# the keyboard
isInteractive = 0
readStdIn = 1

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}kernelconsole.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}kernelconsole.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}kernelconsole.timing.log"

# ****************************************************************

[config.net.tightener.coordinator.scriptrunner]

appPath = "${SCRIPTRUNNER_APP}"

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}scriptrunner.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}scriptrunner.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}scriptrunner.timing.log"

# ****************************************************************

#
# Coordinator used by scripts like rt, re, rrt, rre,...
#

[config.net.tightener.coordinator.scriptrunner.*]

appPath = "${SCRIPTRUNNER_APP}"

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}scriptrunner.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}scriptrunner.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}scriptrunner.timing.log"

# ****************************************************************

[config.net.tightener.coordinator.consoletested]

appPath = "${CONSOLE_TESTED_APP}"
runTests = 1
isInteractive = 1
readStdIn = 0

# Log files for this coordinator

logLevel = 3
logFile = "${DESKTOP_DIR}consoletested.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}consoletested.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}consoletested.timing.log"

# ****************************************************************

[config.net.tightener.coordinator.reflector]

appPath = "${REFLECTOR_APP}"

# Log files for this coordinator

# logLevel = 3
logFile = "${DESKTOP_DIR}reflector.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}reflector.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}reflector.timing.log"

startupScriptFile = "${TIGHTENER_RELEASE_ROOT}ScriptModules/startupScriptReflector.tql

# ****************************************************************

[config.net.tightener.coordinator.bridge.*]

defaultEngine = ESDLL

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}Bridge_ESDLL.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}Bridge_ESDLL.ipc.log"

# ****************************************************************

[config.net.tightener.coordinator.extendscripttoolkit.*]

defaultEngine = ESDLL

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}ExtendScriptToolkit_ESDLL.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}ExtendScriptToolkit_ESDLL.ipc.log"

# ****************************************************************

[config.net.tightener.coordinator.adobeillustrator.*]

defaultEngine = ESDLL

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}Illustrator_ESDLL.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}Illustrator_ESDLL.ipc.log"

# ****************************************************************

[config.net.tightener.coordinator.adobeindesign.*]

defaultEngine = ESDLL

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}InDesign_ESDLL.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}InDesign_ESDLL.ipc.log"

# ****************************************************************

# Note: this uses a wildcard section name
[config.net.tightener.coordinator.indesign*]

defaultEngine = main

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}InDesign_Plug-In.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}InDesign_Plug-In.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}InDesign_Plug-In.timing.log"

# Tightener will then spend up to eventLoopMicroseconds executing Tightener tasks,
# then YieldToEventLoop back to InDesign for heartBeatMicroseconds

# when Tightener is idle, heartBeatMicroseconds: the number of microseconds to let InDesign do it's thing
# before running a Tightener timeslice again
# heartBeatMicroseconds = 500000

# startupDelayMicroseconds: how long to delay the Tightener time slicing process after ID or IDS startup
# startupDelayMicroseconds = 1000000

# ****************************************************************

# Note: this uses a wildcard section name
[config.net.tightener.coordinator.indesign.apid.engine.*]

defaultEngine = main

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.timing.log"

# Tightener will then spend up to eventLoopMicroseconds executing Tightener tasks,
# then YieldToEventLoop back to InDesign for heartBeatMicroseconds

# when Tightener is idle, heartBeatMicroseconds: the number of microseconds to let InDesign do it's thing
# before running a Tightener timeslice again
# heartBeatMicroseconds = 500000

# startupDelayMicroseconds: how long to delay the Tightener time slicing process after ID or IDS startup
# startupDelayMicroseconds = 1000000

# ****************************************************************

# Note: this uses a wildcard section name
[config.net.tightener.coordinator.indesign.apid.ui.*]

defaultEngine = main

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.ipc.log"

# Only available if compiled with LOG_TIMINGS_ENABLE
# logTiming = 1
# timingLogFile = "${DESKTOP_DIR}${COORDINATOR_SHORT_NAME}.timing.log"

# Tightener will then spend up to eventLoopMicroseconds executing Tightener tasks,
# then YieldToEventLoop back to InDesign for heartBeatMicroseconds

# when Tightener is idle, heartBeatMicroseconds: the number of microseconds to let InDesign do it's thing
# before running a Tightener timeslice again
# heartBeatMicroseconds = 500000

# startupDelayMicroseconds: how long to delay the Tightener time slicing process after ID or IDS startup
# startupDelayMicroseconds = 1000000

# ****************************************************************

[config.net.tightener.coordinator.indesign.server*]

# when Tightener is idle, heartBeatMicroseconds: the number of microseconds to let InDesign do it's thing
# before running a Tightener timeslice again
# heartBeatMicroseconds = 50000

# ****************************************************************

[config.net.tightener.coordinator.adobephotoshop.*]

defaultEngine = ESDLL

# disabled: 0 or 1. Setting to 1 makes Tightener stop trying to track this coordinator.
# Default value for 'disabled' is 0
disabled.linux = 1

# Log files for these coordinators

# logLevel = 3
logFile = "${DESKTOP_DIR}Photoshop_ESDLL.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}Photoshop_ESDLL.ipc.log"

# ****************************************************************

[config.net.tightener.coordinator.plugininstaller]

# Log files for these coordinators

# logLevel = 3

# matches what is used by the Xojo app
logFile = "${DESKTOP_DIR}plugininstaller.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}plugininstaller.ipc.log"

# isLogSink: 0 or 1
isLogSink = 1

# ****************************************************************

[config.net.tightener.coordinator.daemon]

# Log files for these coordinators

# logLevel = 3

# matches what is used by the Xojo app
logFile = "${DESKTOP_DIR}daemon.log"

# logIPC = 1
ipcMessageLogFile = "${DESKTOP_DIR}daemon.ipc.log"

# isLogSink: 0 or 1
isLogSink = 1

# **********************
# ...continued from top; more placeholders.
#
# Tightener ini files allow a section to be spread over multiple parts
# and repeating a section header signifies a continuation of the existing section.
#
# The placeholders below are important but they could add to the confusion if I
# put them on top, so I've moved them here, out of sight, as to avoid overwhelming or confusing the
# human reader of this config.ini file.
#

[placeholders]

SCRIPTRUNNER_APP = "${LOCAL_TIGHTENER_RELEASE}","-N","scriptrunner"
REFLECTOR_APP = "${LOCAL_TIGHTENER_RELEASE}","-N","reflector"
CONSOLE_APP = "${LOCAL_TIGHTENER_RELEASE}","-N","console"
CONSOLE_TESTED_APP = "${LOCAL_TIGHTENER_RELEASE}","-N","consoletested"

# **********************

INDESIGN_DESKTOP_SUFFIX = ""
INDESIGN_SERVER_SUFFIX = ".server.${INDESIGN_SERVER_CONFIGURATION}_${INDESIGN_SERVER_PORT}"

# **********************

LOCAL_TIGHTENER_RELEASE.mac = "${TIGHTENER_BINARIES}Tightener"
LOCAL_TIGHTENER_RELEASE.windows = "${TIGHTENER_BINARIES}Tightener.exe"
LOCAL_TIGHTENER_RELEASE.linux = "${TIGHTENER_BINARIES}Tightener"

NETWORK_TIGHTENER_RELEASE.mac = "${TIGHTENER_BINARIES}TightenerGW_Cpp"
NETWORK_TIGHTENER_RELEASE.windows = "${TIGHTENER_BINARIES}TightenerGW_Cpp.exe"
NETWORK_TIGHTENER_RELEASE.linux = "${TIGHTENER_BINARIES}TightenerGW_Cpp"

XOJO_UI_TIGHTENER_RELEASE.mac = "${XOJO_UI_RELEASE_APP_DIR}XojoTightener.app/Contents/MacOS/XojoTightener"
XOJO_UI_TIGHTENER_RELEASE.windows = "${XOJO_UI_RELEASE_APP_DIR}XojoTightener/XojoTightener.exe"
XOJO_UI_TIGHTENER_RELEASE.linux = "${XOJO_UI_RELEASE_APP_DIR}XojoTightener/XojoTightener"

XOJO_CMDLINE_TIGHTENER_RELEASE.mac = "${TIGHTENER_BINARIES}TightenerGW/TightenerGW"
XOJO_CMDLINE_TIGHTENER_RELEASE.windows = "${TIGHTENER_BINARIES}TightenerGW/TightenerGW.exe"
XOJO_CMDLINE_TIGHTENER_RELEASE.linux = "${TIGHTENER_BINARIES}TightenerGW/TightenerGW"

# **********************

XOJO_UI_RELEASE_APP_DIR = "${TIGHTENER_RELEASE_ROOT}Apps/${TIGHTENER_APPS_PLATFORM}/"
XOJO_CMDLINE_RELEASE_APP_DIR = "${TIGHTENER_RELEASE_ROOT}Apps/${TIGHTENER_APPS_PLATFORM}/"
