//
// localMakePDF.tql
//
// Run with rt which uses the local scriptrunner:
//
/****

rt localMakePDF.tql

****/

inDesignScript = << EOF1
// --------------------------------
// Script to run in local InDesign

feedBack = function(message) { 
    stdOut(message + "\n"); 
}

function makeDoc() {

    desktop = sysInfo("DESKTOP_DIR");
    
    docNum = 1;
    outputPDFFile = desktop + "t" + docNum + ".pdf";
    while (fileExists(outputPDFFile)) 
    {
        ++docNum;
        outputPDFFile = desktop + "t" + docNum + ".pdf";
    }

    doc = app.documents.add();
    spread = doc.spreads[0];
    textFrame = spread.textFrames.add();
    textFrame.contents = "This is some more text";
    textFrame.geometricBounds = [5, 5, 80, 80];    

    doc.exportFile(ExportFormat.PDF_TYPE, outputPDFFile);
    
    doc.close(SaveOptions.NO);

    return "done";
}

app.scriptPreferences.userInteractionLevel = UserInteractionLevels.NEVER_INTERACT;

for (testIdx = 0; testIdx < 20; ++testIdx)
{
    result = makeDoc();
    if (result)
    {
        retVal = result;    
    }
    else
    {
        retVal = "failed";
    }
}

retVal

// End of script
// --------------------------------
EOF1

// 
// Read targeted InDesign from config.ini
//

configIni = sysInfo("ini");

inDesignSDKVersion = configIni.placeholders.INDESIGN_SDK_VERSION;
inDesignCoordinatorSuffix = configIni.placeholders.INDESIGN_COORDINATOR_SUFFIX;
inDesignEngineName = configIni.sampleScripts.INDESIGN_TARGET_ENGINE;
coordinatorName = "net.tightener.coordinator.indesign." + inDesignSDKVersion + inDesignCoordinatorSuffix;
isServer = coordinatorName.indexOf(".server.") >= 0;
timeOut = eval(configIni.sampleScripts.LOCAL_TIMEOUT_MS);

if (isServer) 
{
    feedBack = function(message) { 
        stdOut(message + "\n"); 
        evalExtendScript("alert(\"" + message + "\")");
    }    
}
else 
{
    feedBack = function(message) { 
        stdOut(message + "\n"); 
    }
}

feedBack("localMakePDF.tql");

target = 
    "tgh:///" + 
    coordinatorName + 
    "/" + 
    inDesignEngineName;

result = eval(
    inDesignScript, 
    target, 
    timeOut);

if (result)
{
    retVal = "inDesignScript returns '" + result + "'";    
}
else
{
    retVal = "Cannot reach " + target;
}

feedBack(retVal);

